name: vprofile actions
on: workflow_dispatch
env: 
    AWS_REGION: us-west-2
    ECR_REPOSITORY: vprofileapp
    EKS_CLUSTER: vprofile-eks
jobs:
    Testing:
        runs-on: ubuntu-latest
        steps:
            - name: Code checkout
              uses: actions/checkout@v4
            - name: Maven test
              run: mvn test
            - name: Checkstyle
              run: mvn checkstyle:checkstyle
            - name: Set Java 11
              uses: actions/setup-java@v3
              with: 
                distribution: 'temurin'
                java-version: '11'
            - name: Setup SonarQuebe
              uses: warchant/setup-sonar-scanner@v7

            - name: SonarQube Scan
              run: |
               sonar-scanner \
                 -Dsonar.host.url=https://sonarcloud.io \
                 -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
                 -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
                 -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
                 -Dsonar.sources=src/ \
                 -Dsonar.junit.reportsPath=target/surefire-reports/ \
                 -Dsonar.jacoco.reportsPath=target/jacoco.exec \
                 -Dsonar.java.checkstyle.reportsPaths=target/checkstyle-result.xml \
                 -Dsonar.java.binaries=target/test-classes/com/visualpathit/account 

            # - name: SonarQube Quality Gate check
            #   id: sonarqube-quality-gate-check
            #   uses: sonarsource/sonarqube-quality-gate-action@master
            #   timeout-minutes: 5
            #   env: 
            #     SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
            #     SONAR_HOST_URL: https://sonarcloud.io               
    BUILD_AND_PUBLISH:
      needs: Testing
      runs-on: ubuntu-latest
      steps:
        - name: Code checkout
          uses: actions/checkout@v4

        - name: upload image to ECR
          uses: appleboy/docker-ecr-action@master
          with:
            access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
            secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            registry: ${{ secrets.REGISTRY }}
            repo:  ${{ secrets.ECR_REPOSITORY }}
            region: us-west-1
            tags: latest, ${{github.run_number}}
            auto_tag: true
            daemon_off: false
            dockerfile: ./Dockerfile
            context: ./
